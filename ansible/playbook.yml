---
- hosts: swarm
  become: true
  become_method: sudo
  become_user: root

  vars:
      ghcr_user: "{{ lookup('env','GHCR_USER') }}"
      ghcr_token: "{{ lookup('env','GHCR_TOKEN') }}"

  tasks:
      - name: Add host to known_hosts
        ansible.builtin.known_hosts:
          path: /home/ubuntu/.ssh/known_hosts
          name: "{{ inventory_hostname }}"
          key: "{{ lookup('pipe', 'ssh-keyscan -H ' + inventory_hostname) }}"
          state: present


      - name: Install Git if missing
        ansible.builtin.apt:
            name: git
            state: present
            update_cache: yes

      - name: Install private key for repo access
        become: true
        become_user: ubuntu
        ansible.builtin.copy:
          dest: /home/ubuntu/.ssh/id_rsa
          content: "{{ lookup('env', 'REPO_SSH_KEY')}}"
          mode: '0600'

      - name: Add GitHub.com to known_hosts for ubuntu
        become: true
        become_user: ubuntu
        ansible.builtin.known_hosts:
          path: /home/ubuntu/.ssh/known_hosts
          name: github.com
          key: "{{ lookup('pipe', 'ssh-keyscan github.com') }}"

      - name: Ensure .ssh directory exists
        become: true
        become_user: ubuntu
        file:
          path: /home/ubuntu/.ssh
          state: directory
          mode: '0700'

      - name: Copy private SSH key
        become: true
        become_user: ubuntu
        copy:
          dest: /home/ubuntu/.ssh/id_rsa
          content: "{{ lookup('env', 'REPO_SSH_KEY') }}"
          mode: '0600'

      - name: Ensure /opt/todo-app exists and is owned by ubuntu
        become: true
        ansible.builtin.file:
          path: /opt/todo-app
          state: directory
          owner: ubuntu
          group: ubuntu
          mode: '0755'

      - name: Clone or update private todo-app repo via SSH
        git:
          repo: git@github.com:waniyafaheem/exam-practice-ci-cd.git
          dest: /opt/todo-app
          version: main
          key_file: /home/ubuntu/.ssh/id_rsa
          accept_hostkey: yes

      - name: Wait for cloud-init to finish
        wait_for:
            path: /var/lib/cloud/instance/boot-finished
            state: present
            timeout: 120

      - name: Update apt cache (with retries)
        ansible.builtin.apt:
            update_cache: yes
            cache_valid_time: 3600
            update_cache_retries: 5
            update_cache_retry_max_delay: 10

      - name: Install Docker prerequisites
        ansible.builtin.apt:
            name:
                - apt-transport-https
                - ca-certificates
                - curl
                - gnupg
                - lsb-release
                - software-properties-common
            update_cache: yes

      - name: Add Docker GPG key
        apt_key:
            url: https://download.docker.com/linux/ubuntu/gpg
            state: present

      - name: Add Docker apt repo
        apt_repository:
            repo: deb https://download.docker.com/linux/ubuntu focal stable

      - name: Install Docker Engine
        ansible.builtin.apt:
            name: docker-ce
            update_cache: yes

      - name: Add ubuntu user to docker group
        user:
          name: ubuntu
          groups: docker
          append: yes

      - name: Copy .env file
        copy: 
          src: .env
          dest: /opt/todo-app/.env
      
      - name: Copy .env file to frontend
        copy:
          src: .env
          dest: /opt/todo-app/frontend/.env
        
      - name: Copy .env file to frontend
        copy:
          src: .env
          dest: /opt/todo-app/backend/.env

      - name: Ensure Docker is running
        service:
            name: docker
            state: started
            enabled: yes

      - name: Initialize Docker Swarm
        shell: docker swarm init || true

      - name: Log in to GitHub Container Registry
        community.docker.docker_login:
            registry_url: ghcr.io
            username: "{{ ghcr_user }}"
            password: "{{ ghcr_token }}"

      - name: Pull latest backend image from GHCR
        community.docker.docker_image:
            name: ghcr.io/{{ ghcr_user }}/exam-practice-ci-cd/fastapi-todo:latest
            tag: latest
            source: pull

      - name: Pull latest frontend image from GHCR
        community.docker.docker_image:
            name: ghcr.io/{{ ghcr_user }}/exam-practice-ci-cd/todo-frontend:latest
            tag: latest
            source: pull

      - name: Deploy Docker Swarm stack
        become: true
        shell: docker stack deploy -c docker-stack.yml todo-app
        args:
          chdir: /opt/todo-app